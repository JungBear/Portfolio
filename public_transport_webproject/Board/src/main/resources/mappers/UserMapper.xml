<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.domain.user.UserMapper">

<!-- tb_user 테이블 전체 컬럼 -->
<sql id="UserColumns">
	 user_no,
	 id,
	 user_name,
	 nickname,
	 email,
	 pwd,
	 pwd_hint,
	 pwd_hint_ans,
	 gender,
	 age,
	 signin_date,
	 experience,
	 del_yn,
	 del_date,
	 modified_date,
	 Administrator,
	 attendance_date,
	 now_login_time,
	 recent_login_time,
	 recent_logout_time
	
</sql>

<!-- 아아디 중복 확인 -->
    <select id="getId" parameterType="com.study.domain.user.UserRequest" resultType="int">
        SELECT 
        	IFNULL(COUNT(*), 0) 
        FROM 
       		user
        WHERE 
        	id = #{id}
    </select>

<!-- 닉네임 중복 확인 -->
    <select id="getNickname" parameterType="com.study.domain.user.UserRequest" resultType="int">
        SELECT 
        	IFNULL(COUNT(*), 0) 
        FROM
        	user
        WHERE 
        	nickname = #{nickname}
    </select>
    
     <!-- 회원 가입 -->
    <insert id="addMember" parameterType="com.study.domain.user.UserRequest" useGeneratedKeys="true" keyProperty="userNo">
        INSERT INTO user(
		<include refid="UserColumns"/>
       ) VALUES (
		#{userNo},
		#{id},
		#{userName},
		#{nickname},
		#{email},
		#{pwd},
		#{pwdHint},
		#{pwdHintAns},
		#{gender},
		#{age},
		NOW(),
		0,
		0,
		NULL,
		NULL,
		0,
		0,
		NOW(),
		NOW(),
		NOW()	 
	)
    </insert>
    
    <!-- 로그인 -->
    <select id="login" parameterType="com.study.domain.user.UserResponse" resultType="com.study.domain.user.UserResponse">
        SELECT 
        	 <include refid="UserColumns" />
       	FROM
       		user
        WHERE 
        	id = #{id} 
        AND 
        	pwd = #{pwd}
        AND 
        	del_yn = 0
    </select>
    
    <!-- 아이디찾기 -->
    <select id="findId" parameterType="com.study.domain.user.UserRequest" resultType="com.study.domain.user.UserRequest">
        SELECT 
        	 id
       	FROM
       		user
        WHERE 
        	user_name = #{userName} 
        AND 
        	email = #{email}
        AND
        	age = #{age}
        AND 
        	del_yn = 0
    </select>
    
    <!-- 비번찾기 -->
    <select id="findPwd" parameterType="com.study.domain.user.UserRequest" resultType="com.study.domain.user.UserRequest">
        SELECT 
        	 pwd,
        	 user_name
       	FROM
       		user
        WHERE 
        	id = #{id} 
        AND
        	email = #{email}
        AND
        	pwd_hint = #{pwdHint}
        AND 
        	pwd_hint_ans = #{pwdHintAns}
        AND 
        	del_yn = 0
    </select>
    
    <!-- 마이페이지 비번유효성검사 -->
    <select id="checkPwd" parameterType="com.study.domain.user.UserRequest" resultType="com.study.domain.user.UserRequest">
        SELECT 
        	 pwd
       	FROM
       		user
        WHERE 
        	user_no = #{userNo}
        AND
        	pwd = #{pwd}
        AND 
        	del_yn = 0
    </select>
    
    <!-- 회원탈퇴 -->
    <delete id="deleteUser" parameterType="int">
        UPDATE user
        SET
            del_yn = 1
          , del_date = NOW()
        WHERE
            user_no = #{userNo}
        AND 
        	del_yn = 0
    </delete>
    
    <!-- 회원정보수정 -->
    <update id="modifyUser" parameterType="com.study.domain.user.UserRequest">
        UPDATE user
        SET
              modified_date = NOW()
            , pwd_hint = #{pwdHint}
            , pwd_hint_ans = #{pwdHintAns}
            , email = #{email}
        WHERE
            user_no = #{userNo}
    </update>
    
    <!-- 비밀번호 변경 -->
    <update id="changePwd" parameterType="com.study.domain.user.UserRequest">
        UPDATE user
        SET
              modified_date = NOW()
            , pwd = #{pwd}
        WHERE
            user_no = #{userNo}
    </update>
</mapper>